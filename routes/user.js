const express = require("express");
const router = express.Router();
const userAuthController = require("../controllers/userAuthController");
const userProfileController = require("../controllers/userProfileController");
const userCartController = require("../controllers/userCartController");
const userWishlistController = require("../controllers/userWishlistController");
const userOrderController = require("../controllers/userOrderController");
const userWalletController = require("../controllers/userWalletController");
const userPaymentController = require("../controllers/userPaymentController");
const checkblock = require("../middleware/checkblock");

router.get("/", userOrderController.home);
router.get("/login", checkblock, userAuthController.getLogin);
router.get("/getRegister", userAuthController.getRegister);
router.get("/category/:id", userOrderController.getProductsByCategory);
router.post("/checkReferralCode", userProfileController.checkReferralCode);
router.get("/logout", userAuthController.logout);
router.get("/home", userOrderController.home);
router.get("/forher", userOrderController.forher);
router.get("/forhim", userOrderController.forhim);
router.get("/display/:id", userOrderController.display);
router.get("/cartView", userCartController.cartView);
router.get("/cart", userCartController.addToCart);
router.get("/getcart/:userId", userCartController.getCartPage);
router.get("/getcartnumber/:userId", userCartController.getcartnumber);
router.get("/checkout", userOrderController.checkout);
router.post("/checkout", userOrderController.checkoutpost);
router.post("/checkouterror", userOrderController.checkouterrorpost);
router.post("/retry-checkout", userOrderController.retryCheckout);
router.post("/create-razorpay-order", userPaymentController.createrazorpayorder);
router.post("/verify-razorpay-payment", userPaymentController.verifyRazorpayPayment);
router.post("/update-order-status", userPaymentController.updateOrderStatus);
router.get("/check-wallet", userWalletController.getWalletBalance);
router.post("/update-wallet", userWalletController.addToWallet);
router.get("/order", userOrderController.order);
router.get("/orderhistory", userOrderController.orderhistory);
router.get("/generate-invoice/:orderId", userOrderController.generateInvoice);
router.get("/signout", userAuthController.logout);
router.get("/changepass", userAuthController.changepass);
router.get("/forgotpassword", userAuthController.forgotpassword);
router.get("/resendforgototp", userAuthController.resendforgototp);
router.get("/changeCpassword", userAuthController.changeCpassword);
router.get("/otpget", userAuthController.mailsender);
router.get("/resendotp", userAuthController.resendotp);
router.post("/login", userAuthController.postLogin);
router.post("/register", userAuthController.postRegister);
router.post("/logout", userAuthController.postLogout);
router.post("/updateQuantity", userCartController.updateQuantity);
router.post("/removeFromCart/:productId", userCartController.removeFromCart);
router.post("/cancel-order/:orderId", userOrderController.cancelOrder);
router.post("/changepass", userAuthController.changepasspost);
router.post("/forgotpassword", userAuthController.forgotpasswordpost);
router.post("/verifyforgototp", userAuthController.verifyforgototp);
router.post("/changeCpassword", userAuthController.changepasswordpost);
router.post("/initiate-return/:orderId", userOrderController.initiateReturn);
router.post("/initiate-refund/:orderId", userOrderController.initiateRefund);
router.post("/verifyotp", userAuthController.otpvalidation);
router.get("/address", userProfileController.getaddress);
router.get("/profile", userProfileController.getprofile);
router.post("/Address", userProfileController.postaddress);
router.post("/delete/:id", userProfileController.deleteaddress);
router.post("/editprofile/:userID", userProfileController.editprofile);
router.post("/addressedit/:id", userProfileController.addressedit);
router.get("/Editaddress/:i", userProfileController.geteditAddress);
router.get("/wishlistPage", userWishlistController.wishlistPage);
router.post("/wishlistPage", userWishlistController.wishlistPagePost);
router.get("/wishlistInfo", userWishlistController.wishlistInfo);
router.post("/wishlistRemove", userWishlistController.removeProductFromWishlist);
router.get("/wallet", userWalletController.wallet);
router.post("/generate-razorpay-order", userPaymentController.generatewalletRazorpay);
router.post("/createReferral", userProfileController.createReferral);

module.exports = router;