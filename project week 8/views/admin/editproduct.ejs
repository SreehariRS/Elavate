<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>dashboard</title>
    <link rel="stylesheet" href="/stylesheet/admin/editproduct.css">
</head>
<body>
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />  
<nav class="sidebar">
      <header>
        <div class="image-text">
          <span class="image">
            <img src="/img/logo.png" alt="logo" />
          </span>
          <div class="text header-text">
            <span class="main">ELAVATE</span>
            <br>
            <span class="sub">make your smell</span>
          </div>
        </div>
      </header>

      <div class="menu-bar">
        <div class="menu">
          <ul class="menu-links">
            <li class="nav-link">
              <a href="/admin/dashboard">
                <i class="bx bx-home-alt icons"></i>
                <span class="text nav-text">Dashboard</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/admin/customers">
                <i class="bx bx-bar-chart-alt-2 icons"></i>
                <span class="text nav-text">User</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/admin/productlist">
                <i class="bx bx-bell icons"></i>
                <span class="text nav-text">product</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/admin/order">
                <i class="bx bx-pie-chart-alt icons"></i>
                <span class="text nav-text">order</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="/admin/category">
                <i class="bx bx-heart icons"></i>
                <span class="text nav-text">Category</span>
              </a>
            </li>
            <li class="nav-link">
              <a href="#">
                <i class="bx bx-wallet-alt icons"></i>
                <span class="text nav-text">coupon</span>
              </a>
            </li>
          </ul>
        </div>

        <div class="bottom-content">
          <li class="nav-link">
            <a href="#">
              <i class="bx bx-log-out icons"></i>
              <span class="text nav-text">Log Out</span>
            </a>
          </li>
          
          </li>
        </div>
      </div>
    </nav>


<div class="editproductcontainer">
  <h1>Edit Product</h1>

  <form action="/admin/editproduct/<%= prod._id %>" id="editProductForm" method="POST" enctype="multipart/form-data">

      <label for="productName">Product Name:</label>
      <input type="text" id="productName" name="name" value="<%= prod.name %>" required>

      <label for="productDescription">Product Description:</label>
      <textarea id="productDescription" name="description" required><%= prod.description %></textarea>

      <label for="productCategory">Product Category:</label>
      <select id="productCategory" name="category" required>
          <% categories.forEach(category => { %>
              <option value="<%= category %>" <%= prod.category === category ? 'selected' : '' %>><%= category %></option>
          <% }); %>
      </select>

      <label for="productPrice">Product Price:</label>
      <input type="number" id="productPrice" name="price" min="0" step="0.01" value="<%= prod.price %>" required>

      <label for="productStock">Product Stock:</label>
      <input type="number" id="productStock" name="stock" value="<%= prod.stock %>" required>

      <!-- Inside the form -->
<label for="productImages" id="productImagesLabel">Product Images:</label>
<input type="file" id="productImages" name="productImages" accept="image/*" multiple>
<div id="imagePreviews">
    <% prod.productImages.forEach(image => { %>
        <div class="image-preview">
            <img src="<%= image %>" alt="Product Image" class="preview-image">
            <button class="delete-button">Delete</button>
        </div>
    <% }); %>
</div>
<!-- Rest of your form -->
 <!-- Container for image previews -->
      <span id="selectedImagesPlaceholder">No files selected</span>

      <button type="submit">Edit Product</button>
  </form>
</div>

<script>
  document.getElementById('editProductForm').addEventListener('submit', function (event) {
    event.preventDefault();

    // Get the values of name, description, price, and stock
    const nameInput = document.getElementById('productName');
    const descriptionInput = document.getElementById('productDescription');
    const priceInput = document.getElementById('productPrice');
    const stockInput = document.getElementById('productStock');

    const name = nameInput.value.trim();
    const description = descriptionInput.value.trim();
    const price = parseFloat(priceInput.value);
    const stock = parseInt(stockInput.value);

    // Regular expressions for validation
    const nameRegex = /^[a-zA-Z ]+$/; // Only letters and spaces allowed
    const descriptionRegex = /^[a-zA-Z0-9\s,'.]+$/; // Alphanumeric, spaces, and common punctuation allowed

    // Check if name contains only letters and spaces
    if (!nameRegex.test(name)) {
        alert('Product name should contain only letters and spaces.');
        return;
    }

    // Check if description is empty or contains invalid characters
    if (!description || !descriptionRegex.test(description)) {
        alert('Please enter a valid product description.');
        return;
    }

    // Check if price or stock is negative or zero
    if (price <= 0 || stock < 0) {
        alert("Price and stock should be positive numbers.");
        return;
    }

    // Proceed with form submission if validation passes
    const formData = new FormData(this);
    const formAction = this.getAttribute('action');

    fetch(formAction, {
        method: 'POST',
        body: formData,
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log('Product edited successfully:', data);
        window.location.href = '/admin/productlist';
    })
    .catch(error => {
        console.error('Error editing product:', error);
    });
});


  document.getElementById('productImages').addEventListener('change', function () {
      const imagePreviews = document.getElementById('imagePreviews');

      Array.from(this.files).forEach(file => {
          const reader = new FileReader();

          reader.onload = function (e) {
              const preview = document.createElement('div');
              preview.classList.add('image-preview');

              const image = document.createElement('img');
              image.src = e.target.result;
              image.classList.add('preview-image');
              preview.appendChild(image);

              const deleteButton = document.createElement('button');
              deleteButton.classList.add('delete-button');
              deleteButton.textContent = 'Delete';
              deleteButton.addEventListener('click', function () {
                  preview.remove(); // Remove the specific preview when delete button is clicked
              });
              preview.appendChild(deleteButton);

              imagePreviews.appendChild(preview);
          };

          reader.readAsDataURL(file);
      });
  });
</script>




</body>
</html>