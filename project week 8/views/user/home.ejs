<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>home page</title>

        <!-- <link rel="stylesheet" href="/css/bootstrap.css" /> -->
        <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" /> -->
        <!-- <script defer src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.11.0/mdb.min.js"></script> -->
        <script src="https://kit.fontawesome.com/bdf5ca2238.js" crossorigin="anonymous"></script>
        <link rel="stylesheet" href="/stylesheet/user/homepage.css" />
    </head>
    <body>
        <style>
    
        </style>

        <%-include('nav')%>

        <style>
           #flashMessageContainer {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 9999;
}

#flashMessage {
    background-color: #111111; /* Red color */
    color: #ffffff; /* Dark red text color */
    border: 1px solid #cf3747; /* Red border */
    border-radius: 8px; /* Rounded corners */
    padding: 1rem;
    max-width: 400px;
    box-shadow: 0 0 20px rgba(252, 0, 0, 0.2); /* Increased shadow effect */
    animation: slideIn 0.5s forwards, pulse 1s infinite alternate; /* Added pulse animation */
    opacity: 0;
    transform: translateY(-50px); /* Start position */
}

/* Animation keyframes */
@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(1.1);
    }
}

/* Styling for the close button */
.closeButton {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    cursor: pointer;
    color: #721c24; /* Dark red text color */
    font-size: 1.2rem;
    line-height: 1;
}

.closeButton:hover {
    color: #dc3545; /* Lighter red hover color */
}

        </style>
        
        <div id="flashMessageContainer">
            <% if (typeof errorMessage !== 'undefined' && errorMessage.length > 0) { %>
            <div id="flashMessage" class="alert slideIn show"><%= errorMessage %></div>
            <% } %>
        </div>
        

        <!-- carousel.. -->
        <div class="carousel">
            <div class="carousel-item active">
                <img src="/img/c3.webp" alt="Image 1" />
            </div>
            <div class="carousel-item">
                <img src="/img/home 1.webp" alt="Image 2" />
            </div>
            <div class="carousel-item">
                <img src="/img/c4.webp" alt="Image 3" />
            </div>
            <div class="carousel-controls">
                <button class="carousel-button" onclick="showPreviousItem()">&#10094;</button>
                <button class="carousel-button" onclick="showNextItem()">&#10095;</button>
            </div>
        </div>

        <div class="image-container2">
            <div class="image-wrapper">
                <a href="/forher"><img src="/img/card1.1.jpg" class="resized-image" /></a>
                <a href="/forher"><span class="image-text">FOR HER</span></a>
            </div>
            <div class="image-wrapper">
                <a href="/forhim"><img src="/img/card2.2.jpg" class="resized-image" /></a>
                <a href="/forhim"><span class="image-text">FOR HIM</span></a>
            </div>
        </div>

        <!-- product lists -->

        <div class="product-container">
            <% products.forEach(product => { %>

            <a href="/display/<%= product.id %>">
                <div class="product-card">
                    <div class="product-tumb">
                        <img src="<%= product.productImages[0] %>" alt="<%= product.name %>" />
                    </div>
                    <div class="product-details">
                        <span class="product-catagory"><%= product.category %></span>
                        <h4><a href=""><%= product.name %></a></h4>
                        <p><%= product.description %></p>
                        <div class="product-bottom-details">
                       
                            <div class="product-price">
                                <% if (product.offerprice) { %>
                                  ₹ <%= product.offerprice %>
                                
                                  <small>   <% } %>  ₹ <%= product.price %></small>
                               
                            </div>
                            
                            <div class="product-links">
                                <!-- Inside the span element -->

                                <span class="heart-icon" data-product-id="<%= product._id %>">
                                    <i class="fa fa-heart"></i>
                                </span>

                                


                                <!-- Update the anchor tag with the shopping cart icon to include data attributes for productId and quantity -->
                                <a href="#" id="addToCartIcon" data-product-id="<%= product._id %>" data-quantity="1"
                                    ><i class="fa fa-shopping-cart"></i
                                ></a>
                            </div>
                        </div>
                    </div>
                </div>
            </a>
            <% if (product.stock <= 0) { %>
            <!-- SweetAlert indicating that the product is out of stock -->

            <script>
                Swal.fire({
                    title: "Out of Stock",
                    text: 'This product "<%= product.name %>" is currently out of stock.',
                    icon: "error",
                });
            </script>
            <% } %> <% }); %>
        </div>

        <!-- Example buttons for filtering -->

        <section id="About" class="about-section-padding">
            <div class="container">
                <div class="row">
                    <div class="col-lg-4 col-md-12 col-12">
                        <div class="about-img">
                            <img src="/img/men5.webp" alt="" class="img-fluid" />
                        </div>
                    </div>
                    <div class="col-lg-8 col-md-12 col-12 ps-lg-5 mt-md-5">
                        <div class="about-text">
                            <h2>We Provide Best Quality <br />perfume</h2>
                            <p>
                                For more than 30 years, Westlake Development Group has been the choice for custom-built
                                homes in the Pacific Northwest. Our Portland home builders are proud to offer beautiful
                                results and a successful design and build experience for homebuyers just like you. Turn to
                                the experts at Westlake for all your custom home building and steep slope construction
                                needs.
                            </p>
                            <a href="#" class="btn btn-warning">buy now</a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <%-include('footer')%>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script> -->

        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
        <!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script> -->

        <script src="/js/bootstrap.js"></script>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

        <script>
            // Function to hide the flash message after 2 seconds
            function hideFlashMessage() {
                var flashMessage = document.getElementById("flashMessage");
                if (flashMessage) {
                    flashMessage.style.display = "none";
                }
            }

            // Call hideFlashMessage function after 2 seconds if the flash message exists
            var errorMessage = "<%= errorMessage %>";
            if (typeof errorMessage !== "undefined" && errorMessage.length > 0) {
                setTimeout(hideFlashMessage, 2000);
            }
        </script>

        <script>
            document.querySelectorAll("#addToCartIcon").forEach((icon) => {
                icon.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default anchor tag behavior

                    const productId = this.getAttribute("data-product-id"); // Get the product ID from data-product-id attribute
                    const quantity = this.getAttribute("data-quantity"); // Get the quantity from data-quantity attribute
                    const userId = "<%= userId %>"; // Get the userId from the EJS template

                    // Find the closest product card element
                    const productCard = this.closest(".product-card");

                    // Get the stock of the product from the product card
                    const stock = productCard.getAttribute("data-stock");

                    if (parseInt(stock) <= 0) {
                        // Show a SweetAlert indicating that the product is out of stock
                        Swal.fire({
                            title: "Out of Stock",
                            text: "This product is currently out of stock.",
                            icon: "error",
                        });
                    } else {
                        // Construct the URL for the cart page with the product ID, quantity, and user ID
                        const url = `/cart?productId=${productId}&quantity=${quantity}&userId=${userId}`;
                        // Navigate to the constructed URL
                        window.location.href = url;
                    }
                });
            });
        </script>
        <script>
            $(document).ready(function () {
                $("#searchInput").keyup(function () {
                    var searchTerm = $(this).val().toLowerCase();
                    var productsFound = false;

                    $(".product-card").each(function () {
                        var productName = $(this).find(".product-details h4 a").text().toLowerCase();
                        if (productName.indexOf(searchTerm) > -1) {
                            $(this).show();
                            productsFound = true;
                        } else {
                            $(this).hide();
                        }
                    });

                    // If no products were found, show a SweetAlert message
                    if (!productsFound) {
                        swal("Oops!", "No products found for your search term.", "error");
                    }
                });
            });
        </script>

        <script>
            let carouselItems = document.querySelectorAll(".carousel-item");
            let currentIndex = 0;

            function showNextItem() {
                carouselItems[currentIndex].classList.remove("active");
                currentIndex = (currentIndex + 1) % carouselItems.length;
                carouselItems[currentIndex].classList.add("active");
            }

            function showPreviousItem() {
                carouselItems[currentIndex].classList.remove("active");
                currentIndex = (currentIndex - 1 + carouselItems.length) % carouselItems.length;
                carouselItems[currentIndex].classList.add("active");
            }

            setInterval(showNextItem, 5000); // Change image every 5 seconds
        </script>
        <script>
            let lastScrollTop = 0;
            const navbar = document.querySelector(".navMain");

            window.addEventListener("scroll", function () {
                let scrollTop = window.pageYOffset || document.documentElement.scrollTop;

                if (scrollTop > lastScrollTop) {
                    // Scroll down
                    navbar.classList.add("hide");
                } else {
                    // Scroll up
                    navbar.classList.remove("hide");
                }

                lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
            });
        </script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                document.querySelectorAll(".heart-icon").forEach(function (heartIcon) {
                    const productId = heartIcon.dataset.productId;
                    const isInWishlist = localStorage.getItem(`heart-icon-${productId}`) === "true";

                    // Update the heart icon's color based on the wishlist state
                    if (isInWishlist) {
                        heartIcon.querySelector("i").classList.add("heart-icon-filled");
                    }

                    
                    heartIcon.addEventListener("click", function () {
                        const icon = this.querySelector("i");
                        const isFilled = icon.classList.contains("heart-icon-filled");

                        // Toggle the heart icon's class
                        icon.classList.toggle("heart-icon-filled");

                        // Determine the action based on the current state
                        const action = isFilled ? "remove" : "add";

                        // Update localStorage
                        localStorage.setItem(`heart-icon-${productId}`, !isFilled);

                        // Send a request to the backend
                        fetch(`/wishlistPage?action=${action}&productId=${productId}`, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                        })
                            .then((response) => response.json())
                            .then((data) => {
                                if (!data.success) {
                                    // Handle error, e.g., revert the icon's state
                                    icon.classList.toggle("heart-icon-filled");
                                    localStorage.setItem(`heart-icon-${productId}`, isFilled);
                                    showAlert("please login or create an account");
                                }
                            })
                            .catch((error) => {
                                console.error("Error:", error);
                                // Handle error, e.g., revert the icon's state
                                icon.classList.toggle("heart-icon-filled");
                                localStorage.setItem(`heart-icon-${productId}`, isFilled);
                                showAlert("Failed to update wishlist");
                            });

                        function showAlert(message) {
                            const alertElement = document.createElement("div");
                            alertElement.classList.add("alert-message");
                            alertElement.textContent = message;
                            document.body.appendChild(alertElement);

                            // Remove the alert after 3 seconds
                            setTimeout(() => {
                                document.body.removeChild(alertElement);
                            }, 3000);
                        }
                    });
                });
            });
        </script>

        <script>
            document.querySelectorAll(".heart-icon").forEach(function (heartIcon) {
                heartIcon.addEventListener("click", function () {
                    const productId = this.dataset.productId;

                    fetch("/wishlistPage", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ productId: productId }),
                    })
                        .then((response) => {
                            if (!response.ok) {
                                throw new Error("Failed to add product to wishlist");
                            }
                            return response.json();
                        })
                        .then((data) => {
                            // Show a success message or handle response data accordingly
                            console.log(data);
                        })
                        .catch((error) => {
                            console.error(error);
                            // Show an error message or handle the error accordingly
                        });
                });
            });
        </script>

        <script>
            // JavaScript function to handle the click event and navigate to the wishlist page
            function goToWishlistPage() {
                // Replace '/wishlist-page' with the actual URL or path of your wishlist page
                window.location.href = "/wishlistPage";
            }

            // Adding a click event listener to the heart icon
            document.getElementById("heartIcon").addEventListener("click", goToWishlistPage);
        </script>

        <script>
            // Function to sort products based on price (low to high)
            function sortProductsByPriceLowToHigh() {
                const productContainer = document.querySelector(".product-container");
                const products = Array.from(productContainer.querySelectorAll(".product-card"));
                products.sort((a, b) => {
                    const priceA = parseFloat(a.querySelector(".product-price").innerText.replace("$", ""));
                    const priceB = parseFloat(b.querySelector(".product-price").innerText.replace("$", ""));
                    return priceA - priceB;
                });
                productContainer.innerHTML = "";
                products.forEach((product) => {
                    productContainer.appendChild(product);
                });
            }

            // Function to sort products based on price (high to low)
            function sortProductsByPriceHighToLow() {
                const productContainer = document.querySelector(".product-container");
                const products = Array.from(productContainer.querySelectorAll(".product-card"));
                products.sort((a, b) => {
                    const priceA = parseFloat(a.querySelector(".product-price").innerText.replace("$", ""));
                    const priceB = parseFloat(b.querySelector(".product-price").innerText.replace("$", ""));
                    return priceB - priceA;
                });
                productContainer.innerHTML = "";
                products.forEach((product) => {
                    productContainer.appendChild(product);
                });
            }

            // Attach event listeners to filter buttons or dropdowns
            document.querySelector("#sortByPriceLowToHigh").addEventListener("click", sortProductsByPriceLowToHigh);
            document.querySelector("#sortByPriceHighToLow").addEventListener("click", sortProductsByPriceHighToLow);
        </script>
       
        <script>
            document.getElementById("filterButton").addEventListener("click", function () {
                var filterMenu = document.querySelector(".filter-menu");
                filterMenu.classList.toggle("show");
            });

            // Close the dropdown menu if the user clicks outside of it
            window.addEventListener("click", function (event) {
                if (!event.target.matches("#filterButton")) {
                    var filterMenus = document.querySelectorAll(".filter-menu");
                    filterMenus.forEach(function (filterMenu) {
                        if (filterMenu.classList.contains("show")) {
                            filterMenu.classList.remove("show");
                        }
                    });
                }
            });
        </script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                document.querySelectorAll(".heart-icon").forEach(function (heartIcon) {
                    heartIcon.addEventListener("click", function () {
                        const productId = heartIcon.dataset.productId;
                        const isInWishlist = localStorage.getItem(`heart-icon-${productId}`) === "true";

                        if (isInWishlist) {
                            heartIcon.querySelector("i").classList.add("heart-icon-filled");
                        }
                        // Check if the user is logged in
                        const loggedInUser = "<%= loggedInUser %>";
                        if (!loggedInUser) {
                            window.location.href = "/login";
                        } else {
                        }
                    });
                });
            });
        </script>
    </body>
</html>
