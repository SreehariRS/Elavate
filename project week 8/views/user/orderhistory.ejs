<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Product Details</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
        <!-- <script defer src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.11.0/mdb.min.js"></script> -->
        <script src="https://kit.fontawesome.com/bdf5ca2238.js" crossorigin="anonymous"></script>
        <style>
            @import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
            body {
                font-family: "Poppins", sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
            }
            .container {
    max-width: 900px;
    margin: 20px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(242, 255, 0, 0.1);
    position: relative;
    height: auto; /* Remove fixed height */
}
            a {
                color: #2319b0;
                text-decoration: none;
            }
            .container::-webkit-scrollbar {
                display: none; /* Hide the scrollbar */
            }

            .order-details {
                margin-bottom: 20px;
                text-align: center;
            }
            .order-details label {
                font-weight: bold;
            }


            .product-info {
                display: block; /* Changed from flex to block */
            }
            .product-info img {
    max-width: 100%;
    max-height: 150px; /* Adjust as needed */
    margin-right: 0; /* Remove right margin */
    margin-bottom: 10px; /* Add bottom margin */
    position: static; /* Remove relative positioning */
}
.product-details {
    position: static; /* Remove relative positioning */
    text-align: center; /* Center align on smaller screens */
}

            h2 {
                margin-top: 0;
                font-weight: 600;
            }
            p {
                margin: 5px 0;
                font-weight: 400;
            }
            /* Added CSS rules for different order statuses */
            .confirmed {
                color: rgb(0, 255, 0);
            }
            .shipped {
                color: rgb(255, 81, 0);
            }
            .returned {
                color: rgb(47, 0, 255);
            }
            .cancelled {
                color: rgb(255, 0, 0);
            }
            .delivered {
                color: rgb(255, 0, 242);
            }

            /* Custom CSS for SweetAlert */
            .swal-title {
                font-size: 20px; /* Adjust title font size */
            }

            .swal-text {
                font-size: 16px; /* Adjust text font size */
            }

            .swal-input {
                border-radius: 8px; /* Add border radius to input */
                padding: 10px; /* Add padding to input */
                font-size: 14px; /* Adjust input font size */
            }

            .swal-button {
                border-radius: 8px; /* Add border radius to buttons */
                padding: 10px 20px; /* Add padding to buttons */
                font-size: 16px; /* Adjust button font size */
                box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* Add box shadow to buttons */
                background-color: #070707;
            }

            .swal-button:hover {
                box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Adjust box shadow on hover */
                color: aqua;
                background-color: #070707;
            }

            .swal-button:focus {
                outline: none; /* Remove focus outline */
                color: aqua;
                background-color: #070707;
            }

            .swal-footer {
                border-top: none; /* Remove top border from footer */
            }
            body {
                font-family: Arial, sans-serif;
                background-color: #f9f9f9;
                margin: 0;
                padding: 0;
            }
            @import url("https://fonts.googleapis.com/css?family=Roboto:400,500,700");
            * {
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
                margin: 0;
                padding: 0;
            }
            body {
                padding-top: 56px; /* Adjust based on the height of your navbar */
                font-family: "Poppins", sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f5f5f5;
                /* display: flex; */
            }

            .navbar {
                background-color: #ffffff; /* White background */
                box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); /* Box shadow for subtle depth */
                width: 100%;
                position: fixed;
                position: relative;
            }
            */ .navbar-brand {
                padding: 0.5rem 2rem;
                margin-right: 2rem;
            }

            .navbar-logo {
                width: 50px;
                height: auto;
            }

            .navbar-toggler-icon {
                background-color: #1a63ab; /* Dark Gray color for toggler icon */
            }

            .navbar-nav {
                margin-left: auto; /* Adjusted to move items to the right */
            }

            .nav-item {
                margin-left: 1.5rem;
            }

            .nav-link {
                color: #000000; /* Dark Gray color for nav links */
                font-weight: bold;
                transition: color 0.3s ease-in-out;
            }

            .nav-link:hover {
                color: #060606; /* Red color on hover */
            }

            .profile-icon {
                background-color: #bc050500; /* Red color for profile icon background */
                color: #a61414; /* White color for the icon */
                border-radius: 50%;
                padding: 5px;
                font-size: 1.2rem;
                transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
            }

            .profile-icon:hover {
                background-color: #ed0b0b00; /* Dark Gray color on hover */
                color: #15ba29; /* White color on hover */
            }

            .dropdown-menu {
                background-color: #2c2b2b; /* White background for dropdown menu */
            }

            .dropdown-item {
                color: #ffffff; /* Dark Gray color for dropdown items */
                font-weight: bold;
                transition: color 0.3s ease-in-out;
            }

            .dropdown-item:hover {
                color: #f60505; /* Red color on hover */
            }

            .product-heading {
                text-align: center;
                padding-left: 22px;
            }
            .product-heading h2 {
                margin-top: 150px;
                font-weight: 700;
            }

            .navbar.fixed-top {
                position: fixed;
                width: 100%;
                top: 0;
                z-index: 1000;
            }

            .navMAin {
                margin-top: 56px; /* Adjusted to account for the fixed-top navbar height */
            }
            .section-padding {
                padding: 100px 0;
            }

            .cancel-order-btn {
                margin-top: 10px; /* Adjust as needed */
            }

            .cancel-btn,
            .return-btn {
                background-color: #070707;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    position: absolute;
    bottom: 20px;
    right: 20px;
    z-index: 1;
            }

            .cancel-btn:hover,
            .return-btn:hover {
                background-color: #353434;
            }
        </style>
    </head>
    <body>
        <main class="navMAin">
            <nav class="navbar navbar-expand-lg navbar-light fixed-top">
                <div class="container-fluid">
                    <a class="navbar-brand" href="/">
                        <img src="/img/logo.png" alt="Logo" class="navbar-logo" />
                    </a>
                    <button
                        class="navbar-toggler"
                        type="button"
                        data-toggle="collapse"
                        data-target="#navbarNav"
                        aria-controls="navbarNav"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                    >
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNav">
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link" href="/forhim">For Him</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/forher">For Her</a>
                            </li>
                        </ul>
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a
                                    class="nav-link profile-icon"
                                    href="#"
                                    id="navbarDropdownMenuLink"
                                    data-toggle="dropdown"
                                    aria-haspopup="true"
                                    aria-expanded="false"
                                >
                                    <i class="fas fa-user"></i>
                                </a>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                                    <a class="dropdown-item" href="#">Wishlist</a>
                                    <a class="dropdown-item" href="/CartView">Cart</a>
                                    <a class="dropdown-item" href="/login">Login</a>
                                    <a class="dropdown-item" href="/signout">Logout</a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </main>
       
            <!-- Loop through orders -->
            <% ordersi.slice().reverse().forEach(order => { %>

            <!-- Loop through items in each order -->
            <% order.items.forEach(item => { %>
            <div class="container">
                <div class="order-item">
                    <div class="order-details">
                        <div>
                            <h2>Order_ID <%= String(order._id).slice(-4) %></h2>
                            <p>Date & Time: <%= order.date.toLocaleString() %></p>

                            <% if (order.status === 'delivered') { %>
                            <div class="return-order-btn">
                                <button class="return-btn" onclick="initiateReturn('<%= order._id %>')">Return Order</button>
                            </div>

                            <% } else if (order.status === 'returned' || order.status === 'cancelled') { %>
                            <!-- Show generate invoice button for returned orders -->

                            <% } else { %>
                            <!-- Show the cancel and generate invoice buttons for other cases -->

                            <div class="cancel-order-btn">
                                <button
                                    class="cancel-btn"
                                    id="cancelBtn_<%= order._id %>"
                                    onclick="cancelOrder('<%= order._id %>')"
                                >
                                    Cancel Order
                                </button>
                            </div>

                            <% } %>
                        </div>
                    </div>
                    <div class="product-info">
                        <!-- Display product details -->
                        <% if (item.productId && item.productId.productImages && item.productId.productImages.length > 0) { %>
                        <img
                            src="<%= item.productId.productImages[0] %>"
                            alt="Product Image"
                            style="max-width: 100px; max-height: 100px; height: auto"
                        />
                        <div class="product-details">
                            <h2><%= item.productId.name %></h2>
                            <p><strong>Quantity:</strong> <%= item.quantity %></p>
                            <p><strong>Address:</strong> <%= order.selectedAddress %></p>
                            <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                            <p>
                                <strong>Order Status:</strong>
                                <span class="<%= order.status.toLowerCase() %>"><%= order.status %></span>
                            </p>
                            <p><strong>Total:</strong> ₹<%= item.productId.price * item.quantity %></p>
                        </div>
                        <% } else { %>
                        <div class="product-details">
                            <p><em>Product details not available</em></p>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>
            <% }); %>
            <% }); %>

        
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
            <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
            <script
                src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
                crossorigin="anonymous"
            ></script>
    
            <!-- <script>
        async function generateInvoice(orderId) {
          try {
            const response = await fetch(`/generate-invoice/${orderId}`);
            if (response.ok) {
              // Trigger a download of the generated invoice
              const blob = await response.blob();
              const link = document.createElement('a');
              link.href = window.URL.createObjectURL(blob);
              link.download = `invoice_${orderId}.pdf`;
              link.click();
            } else {
              // Handle the case where generating the invoice failed
              console.error('Error generating invoice:', response.statusText);
            }
          } catch (error) {
            console.error('Error generating invoice:', error);
          }
        }
      </script> -->
    
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
            <script>
                async function initiateReturn(orderId) {
                    try {
                        const { value: reason } = await Swal.fire({
                            title: "Initiate Return",
                            input: "text",
                            inputLabel: "Reason for Return",
                            inputPlaceholder: "Enter your reason here",
                            showCancelButton: true,
                            confirmButtonColor: "#d9534f",
                            cancelButtonColor: "#3085d6",
                            confirmButtonText: "Initiate Return",
                        });
    
                        if (reason) {
                            const response = await fetch(`/initiate-return/${orderId}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({ reason }),
                            });
    
                            const data = await response.json();
    
                            if (data.success) {
                                // Update the UI or show a success message
                                console.log("Return initiated successfully");
                            } else {
                                console.error("Error initiating return:", data.message);
                                // Handle the case where return initiation failed
                            }
                        }
                    } catch (error) {
                        console.error("Error initiating return:", error);
                        // Handle network or other errors
                    }
                }
    
                async function cancelOrder(orderId) {
                    // Check if the order has already been cancelled locally
                    if (localStorage.getItem(`cancelledOrder_${orderId}`)) {
                        // Update the button text and style
                        const cancelButton = document.getElementById(`cancelBtn_${orderId}`);
                        cancelButton.innerText = "Cancelled";
                        cancelButton.classList.add("cancelled");
                        cancelButton.disabled = true;
    
                        Swal.fire("Already Cancelled", "This order has already been cancelled.", "info");
                        return;
                    }
                    const { value: reason } = await Swal.fire({
                        title: "Cancel Order",
                        input: "text",
                        inputLabel: "Reason for cancellation",
                        inputPlaceholder: "Enter your reason here",
                        showCancelButton: true,
                        confirmButtonColor: "#d9534f",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Confirm Cancellation",
                    });
    
                    if (reason) {
                        try {
                            // Send an AJAX request to your server to cancel the order
                            const response = await fetch(`/cancel-order/${orderId}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                },
                                body: JSON.stringify({ reason }),
                            });
    
                            const data = await response.json();
    
                            if (data.success) {
                                // Update the button text and style
                                localStorage.setItem(`cancelledOrder_${orderId}`, "true"); // Store in local storage
                                const cancelButton = document.getElementById(`cancelBtn_${orderId}`);
                                cancelButton.innerText = "Cancelled";
                                cancelButton.classList.add("cancelled");
                                cancelButton.disabled = true;
    
                                // Show a success message
                                Swal.fire({
                                    title: "Order Cancelled!",
                                    text: `Your order has been cancelled. Reason: ${reason}`,
                                    icon: "success",
                                });
                            } else {
                                // Handle the case where the cancellation was not successful
                                console.error("Error cancelling order:", data.message);
                                Swal.fire("Error", "Failed to cancel order. Please try again.", "error");
                            }
                        } catch (error) {
                            console.error("Error cancelling order:", error);
                            Swal.fire("Error", "Failed to cancel order. Please try again.", "error");
                        }
                    }
                }
            </script>    </body>
</html>