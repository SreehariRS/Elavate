<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management - Dashboard</title>
    <link rel="stylesheet" href="/stylesheet/admin/sidebar.css">
    <link rel="stylesheet" href="/stylesheet/admin/usermanage.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
<style>
    /* Existing styles (kept intact) */
    .main-content {
        margin-left: 280px; /* Match new sidebar width */
        padding: 20px;
        background-color: #ffffff; 
        min-height: 100vh;
        transition: margin-left 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .sidebar.collapsed + .main-content {
        margin-left: 80px;
    }

    .block-btn:disabled, .unblock-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
    
    .alert {
        padding: 10px;
        margin: 10px 0;
        border-radius: 4px;
        display: none;
    }
    
    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }
    
    .alert-error {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    /* Mobile responsive adjustments */
    @media (max-width: 768px) {
        .main-content {
            margin-left: 0;
            padding: 10px;
        }
        
        .sidebar.mobile-open ~ .main-content {
            margin-left: 0;
        }
    }

    /* Table improvements for better mobile display */
    @media (max-width: 576px) {
        .table {
            font-size: 14px;
        }
        
        .table td, .table th {
            padding: 0.5em;
        }
        
        .form-user {
            width: 100%;
            margin-bottom: 10px;
        }
    }

    /* âœ… New pagination styles */
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        gap: 10px;
    }
    .pagination button {
        padding: 6px 12px;
        border: 1px solid #ccc;
        background: #fff;
        cursor: pointer;
        border-radius: 4px;
    }
    .pagination button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
</style>

<link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet"/>  

<%- include('sidebar') %>

<div class="main-content">
    <main id="site-main">
        <div class="container">
            
            <!-- Alert messages -->
            <div id="alert-container">
                <div class="alert alert-success" id="success-alert"></div>
                <div class="alert alert-error" id="error-alert"></div>
            </div>
            
            <!-- Search Form -->
            <form class="form-inline my-2 my-lg-0">
                <input class="form-user mr-sm-2" type="search" placeholder="Search users..." aria-label="Search">
            </form>

            <!-- Users Table -->
            <form action="" method="">
                <table class="table" id="user-table">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Status</th>
                            <th>Action</th> 
                        </tr>
                    </thead>
                    <tbody id="user-table-body">
                        <% users.forEach((user, index) => { %>
                        <tr id="user-row-<%= user._id %>">
                            <td><%= index + 1 %></td>
                            <td><%= user.firstname %></td>
                            <td><%= user.email %></td>
                            <td id="status-<%= user._id %>">
                                <% if (user.isBlocked) { %>
                                   Blocked
                                <% } else { %>
                                   Active
                                <% } %>    
                            </td>
                            <td>
                                <button 
                                    type="button" 
                                    class="<%= user.isBlocked ? 'unblock-btn' : 'block-btn' %>" 
                                    id="btn-<%= user._id %>"
                                    data-user-id="<%= user._id %>"
                                    data-blocked="<%= user.isBlocked %>"
                                    onclick="toggleUserBlock('<%= user._id %>', '<%= user.isBlocked %>')"
                                > 
                                   <%= user.isBlocked ? 'Unblock' : 'Block' %>
                                </button>
                            </td>
                        </tr>
                        <% }) %>
                    </tbody>
                </table>
            </form>

            <!-- Pagination Controls -->
            <div class="pagination">
                <button id="prev-btn" onclick="prevPage()">Previous</button>
                <span id="page-info"></span>
                <button id="next-btn" onclick="nextPage()">Next</button>
            </div>
        </div>
    </main>
</div>

<script>
    // ===== Pagination Logic =====
    const rows = Array.from(document.querySelectorAll("#user-table-body tr"));
    const rowsPerPage = 10;
    let currentPage = 1;
    const totalPages = Math.ceil(rows.length / rowsPerPage);

    function renderTablePage(page) {
        rows.forEach(row => row.style.display = "none");
        const start = (page - 1) * rowsPerPage;
        const end = start + rowsPerPage;
        rows.slice(start, end).forEach(row => row.style.display = "table-row");

        document.getElementById("page-info").textContent = `Page ${page} of ${totalPages}`;
        document.getElementById("prev-btn").disabled = page === 1;
        document.getElementById("next-btn").disabled = page === totalPages;
    }

    function nextPage() {
        if (currentPage < totalPages) {
            currentPage++;
            renderTablePage(currentPage);
        }
    }

    function prevPage() {
        if (currentPage > 1) {
            currentPage--;
            renderTablePage(currentPage);
        }
    }

    renderTablePage(currentPage);

    // ===== Existing Block/Unblock Logic =====
    async function toggleUserBlock(userId, isCurrentlyBlocked) {
        const isBlocked = isCurrentlyBlocked === 'true';
        const button = document.getElementById(`btn-${userId}`);
        const statusCell = document.getElementById(`status-${userId}`);
        
        button.disabled = true;
        button.textContent = 'Processing...';
        
        try {
            const response = await fetch(`/admin/customers/${userId}/toggle-block`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'same-origin'
            });
            
            const result = await response.json();
            
            if (result.success) {
                const newStatus = result.isBlocked;
                statusCell.textContent = newStatus ? 'Blocked' : 'Active';
                button.className = newStatus ? 'unblock-btn' : 'block-btn';
                button.textContent = newStatus ? 'Unblock' : 'Block';
                button.setAttribute('onclick', `toggleUserBlock('${userId}', '${newStatus}')`);
                showAlert('success', result.message || 'User status updated successfully');
            } else {
                throw new Error(result.message || 'Failed to update user status');
            }
        } catch (error) {
            console.error('Error:', error);
            showAlert('error', 'Failed to update user status. Please try again.');
            button.textContent = isBlocked ? 'Unblock' : 'Block';
        } finally {
            button.disabled = false;
        }
    }

    // ===== Toast / Alert Logic (unchanged) =====
    function showAlert(type, message) {
        const alertElement = document.getElementById(type === 'success' ? 'success-alert' : 'error-alert');
        if (alertElement) {
            alertElement.textContent = message;
            alertElement.style.display = 'block';
            const otherAlert = document.getElementById(type === 'success' ? 'error-alert' : 'success-alert');
            if (otherAlert) otherAlert.style.display = 'none';
            setTimeout(() => { alertElement.style.display = 'none'; }, 3000);
        }
    }
</script>
</body>
</html>
