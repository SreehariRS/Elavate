<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="stylesheet/admin/home.css">

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />


  </head>

  <body>
    <style>
      
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Poppins", sans-serif;
        min-height: 100vh;
        background-color: #f4f4f4;
        overflow-x: hidden;
      }

     
      /* Main Content Area */
      .content {
        margin-left: 200px;
        padding: 20px;
        padding-top: 30px;
        display: flex;
        justify-content: space-between; /* Change to space-between to separate charts */
        align-items: flex-start;
        flex-wrap: wrap;
      }

      .chart-container canvas {
        max-width: 300px; /* Adjust the maximum width of the graph */
        max-height: 300px; /* Adjust the maximum height of the graph */
        width: 100%; /* Ensure the canvas fills its container */
        height: auto; /* Automatically adjust height based on width */
      }

      .overview-item {
        flex-basis: calc(25% - 20px);
        background-color: #b6c2c0;
        border-radius: 5px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      .overview-item h3 {
        margin-top: 0;
        color: white;
        text-transform: uppercase;
      }

      .overview-item p {
        margin: 0;
        font-size: 24px;
        font-weight: bold;
      }

      .chart {
        max-width: 900px;
        height: 450px;
        padding: 50px;
        margin: 0 auto;
      }

      .chart .chart_types {
        text-align: center;
        margin-bottom: 30px;
      }

      .chart .chart_types button {
        padding: 10px 25px;
      }

      /* Main Content Area */
      .content {
        margin-left: 200px;
        padding: 20px;
        padding-top: 30px;
        display: flex;
        flex-wrap: wrap;
      }

      /* Adjust width of chart containers */
      .chart-container {
        width: calc(50% - 20px); /* Set the width to 50% minus margin */
        margin-bottom: 20px;
      }

      .chart-container canvas {
        max-width: 100%;
        height: auto;
      }

      .time-filters {
        display: flex;
        justify-content: center; /* Center the buttons horizontally */
        margin-bottom: 20px; /* Add margin to separate the buttons from the charts */
      }

      .time-filters button {
        margin: 0 10px; /* Add spacing between buttons */
      }
      /* Top Selling Products */
      .overview-item.top-selling-products {
        background-color: #b6c2c0;
        color: black;
        border-radius: 5px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        flex-basis: calc(25% - 20px);
        margin-left: 100px;
        margin-top: 40px;
      }

      .overview-item.top-selling-category {
        background-color: #b6c2c0;
        color: black;
        border-radius: 5px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        flex-basis: calc(25% - 20px);
        margin-top: 100px;
        margin-right: 104px;
      }

      .sidebar.hidden {
  display: none;
}

.toggle-sidebar {
  display: none; /* Initially hide the toggle button */
}

@media screen and (max-width: 1300px) {
  .toggle-sidebar {
    display: block;
    position: absolute;
    top: 10px;
    left: 10px;
    cursor: pointer;
    z-index: 9999;
  }

  .sidebar.hidden {
    display: none;
  }
}
.toggle-sidebar.active {
  color: rgb(255, 255, 255); /* Change the color to red */
}
@media screen and (max-width: 768px) {
            .sidebar {
                width: 200px; /* Adjust sidebar width for smaller screens */
            }
            .main-content {
                margin-left: 200px; /* Adjust main content margin */
            }
        }

        @media screen and (max-width: 576px) {
            .sidebar {
                display: none; /* Hide sidebar on smaller screens */
            }
            .main-content {
                margin-left: 0; /* Adjust main content margin */
            }
        }
        @import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;800&family=Poppins:wght@200;300;400;500;600;700&display=swap");

* {
  font-family: "Poppins", "sans-sarif";
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --body-color: #ffffff;
  --sidebar-color: #000000;
  --primary-color: #f4f2f2;
  --primary-color-light: #f4f2f2;
  --text-color: #ffffff;
 

  --trans-02: all 0.2s ease;
  --trans-03: all 0.3s ease;
  --trans-04: all 0.4s ease;
  --trans-04: all 0.5s ease;
}

body {
  height: 100vh;
  background-color: var(--body-color);
  transition: var(--trans-02);
}

.sidebar .text {
  font-size: 16px;
  font-weight: 500;
  color: var(--text-color);
  /* transition: var(--trans-04); */
  white-space: unset;
  opacity: 1;
}

.sidebar .image {
  min-width: 60px;
  display: flex;
  align-items: center;
}

/* Sidebar */
.sidebar {
  position: fixed;
  top: 0;
  left: 0px;
  height: 100%;
  width: 250px;
  background-color: var(--sidebar-color);
  padding: 10px 14px;
  transition: var(--trans-02);
}

.sidebar header {
  position: relative;
}
.sidebar .image-text img {
  width: 40px;
  height: 40px;
  border-radius: 10px;
}

.sidebar header .image-text {
  display: flex;
  align-items: center;
}

.header .image-text .header-text {
  display: flex;
  flex-direction: column;
}

.header-text .main {
  font-weight: 600;
}

.header-text .sub {
  margin-top: -2px;
}


.sidebar li {
  height: 50px;
  /* background-color: red; */
  margin-top: 10px;
  list-style: none;
  display: flex;
  align-items: center;
}

.sidebar li .icons {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 60px;
  font-size: 20px;
}
.sidebar li .icons,
.sidebar li .text {
  color: var(--text-color);
  transition: var(--trans-03);
}

.sidebar li a {
  height: 100%;
  width: 100%;
  text-decoration: none;
  display: flex;
  align-items: center;
  padding-right: 50px;
  border-radius: 6px;
  transition: var(--trans-04);
  text-align: left;
}

.sidebar li a:hover {
  background: var(--primary-color);
}
.sidebar li a:hover .icons,
.sidebar li a:hover .text {
  color: var(--dark-color);
}

.sidebar .menu-bar {
  height: 100%;
  height: calc(100% - 50px);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.containerfirst {
    max-width: 89%; 
    margin: 0 auto; 
}

.space {
    margin-left: 200px;
    padding: 20px;
    padding-top: 30px; /* Adjusted padding for content area */
}
.overview-item h3 {
    margin-top: 0;
    color: #fff;
    font-size: 1.6em; /* slightly reduced font size */
    text-transform: uppercase;
    margin-bottom: 10px; /* slightly reduced margin bottom */
}

.overview-item p {
    margin: 0;
    font-size: 1.2em; /* slightly reduced font size */
    font-weight: bold;
    color: #fff;
}

.overview-item:nth-child(even) {
    background-color: #2c3e50; /* blue-gray for even items */
}

.overview-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}
.overview-item {
    width: calc(45% - 20px); /* slightly reduced width */
    border-radius: 10px; /* slightly reduced border radius */
    padding: 25px;
    margin-bottom: 20px; /* slightly reduced margin bottom */
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    transition: transform 0.3s ease-in-out;
}
.overview-item:nth-child(odd) {
    background-color: #131212; /* dark gray for odd items */
}


.overview-row {
 display: flex;
 justify-content: space-between; /* Adjust spacing between items */
 margin-bottom: 20px; /* Add some space between rows */
}

/* Ensure each item takes up half the width of the row */
.overview-row .overview-item {
 flex-basis: calc(50% - 20px); /* Adjust based on desired spacing */
}

.top-selling-category li {
  color: white;
}
.overview-item.top-selling-products li {
  color: white;
}


    </style>
    <!-- Sidebar Navigation -->
  
    <link
    href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
    rel="stylesheet"
  />  
  <div class="toggle-sidebar">
    <i class="bx bx-menu toggle-icon"></i>
  </div>
  <nav class="sidebar">
    <header>
      <div class="image-text">
        <span class="image">
          <img src="/img/logo.png" alt="logo" />
        </span>
        <div class="text header-text">
          <span class="main">ELAVATE</span>
          <br>
          <span class="sub">make your smell</span>
        </div>
      </div>
    </header>
  
    <div class="menu-bar">
      <div class="menu">
        <ul class="menu-links">
          <li class="nav-link">
            <a href="/admin/home">
              <i class="bx bx-home-alt icons"></i>
              <span class="text nav-text">Dashboard</span>
            </a>
          </li>
          <li class="nav-link">
            <a href="/admin/customers">
              <i class="bx bx-bell icons"></i>
              <span class="text nav-text">User</span>
            </a>
          </li>
          <li class="nav-link">
            <a href="/admin/productlist">
              <i class="bx bx-bar-chart-alt-2 icons"></i>
              <span class="text nav-text">Product</span>
            </a>
          </li>
         
          <li class="nav-link">
            <a href="/admin/order">
              <i class="bx bx-pie-chart-alt icons"></i>
              <span class="text nav-text">order</span>
            </a>
          </li>
          <li class="nav-link">
            <a href="/admin/category">
              <i class="bx bx-heart icons"></i>
              <span class="text nav-text">Category</span>
            </a>
          </li>
          <li class="nav-link">
            <a href="/admin/coupon">
              <i class="bx bx-wallet-alt icons"></i>
              <span class="text nav-text">coupon</span>
            </a>
          </li>
          <li class="nav-link">
            <a href="/admin/sales">
              <i class="bx bx-wallet-alt icons"></i>
              <span class="text nav-text">Sales Report</span>
            </a>
          </li>
        </ul>
      </div>
  
    
        <li class="nav-link">
          <a href="/admin/login">
            <i class="bx bx-log-out icons"></i>
            <span class="text nav-text">Log Out</span>
          </a>
        </li>
        
        </li>
     
    </div>
  </nav>
    

 <div class="containerfirst"> 
  <div class="space" style="margin-left: 250px;">
    <!-- Wrap the first two items in a container -->
    <div class="overview-row">
      <div class="overview-item overall-sales">
        <h3>Overall Sales Amount</h3>
        <p>₹<%= data.totalAmount %></p>
      </div>
      <div class="overview-item overall-order-amount">
        <h3>Total Orders</h3>
        <p><%= data.totalOrders %></p>
      </div>
    </div>

    <!-- Wrap the next two items in a container -->
    <div class="overview-row">
      <div class="overview-item overall-discount">
        <h3>Total Users</h3>
        <p><%= data.user %></p>
      </div>
      <div class="overview-item total-product-numbers">
        <h3>Total Products</h3>
        <p><%= data.product %></p>
      </div>
    </div>
 </div>
   
    <!-- Time Filters -->
    <div class="time-filters">
      <button id="dayFilterBtn" class="btn btn-light" onclick="filterData('day')">1 Day</button>
      <button id="weekFilterBtn" class="btn btn-light" onclick="filterData('week')">1 Week</button>
      <button id="monthFilterBtn" class="btn btn-light" onclick="filterData('month')">1 Month</button>
      <button id="yearFilterBtn" class="btn btn-light" onclick="filterData('year')">1 Year</button>
    </div>

    <div class="content">
      <!-- Chart Containers -->
   

      <!-- Top Selling Products -->
      <div class="overview-item top-selling-products">
        <h3>Top Selling Products</h3>
        <ul>
          <% topSellingProducts.forEach(product => { %>
          <li><%=  product.name  %></li>
          <!-- Use _id instead of p_name -->
          <% }); %>
        </ul>
      </div>

      <div class="chart-container">
        <h2>Top Selling Products</h2>
        <canvas id="doughnutChart"></canvas>
      </div>

      <div class="chart-container">
        <h2>Top Selling Categories</h2>
        <canvas id="doughnutChartCategories"></canvas>
      </div>

      <div class="overview-item top-selling-category">
        <h3>Top Selling Categories</h3>
        <ul>
          <% topSellingCategories.forEach((category, index) => { %>
            <li><%= index + 1 %>. <%= category._id %></li>
          <% }); %>
          
        </ul>
      </div>
    </div>
  </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
      let currentFilter = "1 year";
      let barCtx, lineCtx, doughnutCtx, doughnutCategoryCtx;

      document.addEventListener("DOMContentLoaded", function () {
        doughnutCtx = document.getElementById("doughnutChart").getContext("2d");
        doughnutCategoryCtx = document.getElementById("doughnutChartCategories").getContext("2d");

        // Fetch graph data initially
        fetchGraphData("doughnut-graph", doughnutCtx, createDoughnutChart);
        fetchGraphData("doughnut-category-graph", doughnutCategoryCtx, createDoughnutCategoryChart);
      });

      async function fetchGraphData(graphType, ctx, createChartFunc, currentFilter) {
        try {
          const response = await fetch(`/admin/${graphType}?filter=${currentFilter}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({}), // Corrected "data" to "body"
          });
          if (!response.ok) {
            throw new Error("Network response was not ok.");
          }
          const data = await response.json();

          // Check if the graph type is doughnut-graph
          if (graphType === "doughnut-graph") {
            // Adjust data format for doughnut chart
            
            const labels = data.map((product) => product.name);
            const values = data.map((product) => product.count);
            createChartFunc(ctx, labels, values);
          } else if (graphType === "doughnut-category-graph") {
            const labels = data.map((category) => category._id);
            const values = data.map((category) => category.count);
            createChartFunc(ctx, labels, values); // Corrected function name
          } else {
            createChartFunc(ctx, data);
          }
        } catch (error) {
          console.error(`Error fetching ${graphType} data:`, error);
        }
      }

      function filterData(filter) {
        currentFilter = filter;
        // Re-fetch data with updated filter
        fetchGraphData('doughnut-graph', doughnutCtx, createDoughnutChart, currentFilter);
        fetchGraphData('doughnut-category-graph', doughnutCategoryCtx, createDoughnutChart, currentFilter); // Added category graph
      }


    

      function createDoughnutChart(ctx, labels, values) {
        if (ctx.chart) {
          ctx.chart.destroy();
        }

        // Create doughnut chart
        ctx.chart = new Chart(ctx, {
          type: "doughnut",
          data: {
            labels: labels,
            datasets: [
              {
                label: "Top Selling Products",
                data: values,
                backgroundColor: [
                  "rgba(255, 99, 132, 0.5)",
                  "rgba(54, 162, 235, 0.5)",
                  "rgba(255, 206, 86, 0.5)",
                  "rgba(75, 192, 192, 0.5)",
                  "rgba(60,150,170,0.5)",
                ],
              },
            ],
          },
          options: {
            legend: {
              display: true,
              position: "right",
            },
          },
        });
      }
      // Function to create doughnut chart for top selling categories
      function createDoughnutCategoryChart(ctx, labels, values) {
        if (ctx.chart) {
          ctx.chart.destroy();
        }

        // Create doughnut chart for categories
        ctx.chart = new Chart(ctx, {
          type: "doughnut",
          data: {
            labels: labels,
            datasets: [
              {
                label: "Top Selling Categories",
                data: values,
                backgroundColor: [
                  "rgba(255, 99, 132, 0.5)",
                  "rgba(54, 162, 235, 0.5)",
                  "rgba(255, 206, 86, 0.5)",
                  "rgba(75, 192, 192, 0.5)",
                  "rgba(60,150,170,0.5)",
                ],
              },
            ],
          },
          options: {
            legend: {
              display: true,
              position: "right",
            },
          },
        });
      }

      function getBackgroundColor(labels) {
        const topProducts = ["Product 1", "Product 2", "Product 3"]; // Example: top 3 products
        return labels.map((label) => (topProducts.includes(label) ? "#ffcc80" : "rgba(54, 162, 235, 0.2)"));
      }
    </script>
    <script>
      // JavaScript for automatically toggling sidebar visibility
      const toggleButton = document.querySelector('.toggle-sidebar');
      const sidebar = document.querySelector('.sidebar');
      
      function toggleSidebar() {
        sidebar.classList.toggle('hidden');
        toggleButton.classList.toggle('active'); // Toggle the active class on the toggle button
      }
      
      function checkViewportWidth() {
        if (window.innerWidth <= 1300) {
          sidebar.classList.add('hidden');
          toggleButton.style.display = 'block';
        } else {
          sidebar.classList.remove('hidden');
          toggleButton.style.display = 'none';
        }
      }
      
      toggleButton.addEventListener('click', function() {
        toggleSidebar();
      });
      
      // Check viewport width initially and on resize
      checkViewportWidth();
      window.addEventListener('resize', checkViewportWidth);
      
      </script>
  </body>
</html>
