<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>

        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
        <!-- Font Awesome CDN -->
        <script src="https://kit.fontawesome.com/bdf5ca2238.js" crossorigin="anonymous"></script>
        <link rel="stylesheet" href="/stylesheet/user/forhim.css" />
    </head>
    <body>
        <%-include('nav3')%>
        <div class="product-heading" style="text-align: center;">
            <h2>Womens perfume</h2>
        </div>

      
        
        <div class="product-container">
            <% products.forEach(product => { %>
                <a href="/display/<%= product.id%>">
                <div class="product-card">
                    <div class="product-tumb">
                        <img src="<%= product.productImages[0] %>" alt="<%= product.name %>" />
                    </div>
                    <div class="product-details">
                        <span class="product-catagory"><%= product.category %></span>
                        <h4><a href=""><%= product.name %></a></h4>
                        <p><%= product.description %></p>
                        <div class="product-bottom-details">
                            <div class="product-price">
                                <% if (product.oldPrice) { %>
                                    <small><%= product.oldPrice %></small>
                                <% } %>
                                <%= product.price %>
                            </div>
                            <div class="product-links">
                                <!-- Inside the span element -->

                                <span class="heart-icon" data-product-id="<%= product._id %>">
                                    <i class="fa fa-heart"></i>
                                </span>

                                


                                <!-- Update the anchor tag with the shopping cart icon to include data attributes for productId and quantity -->
                                <a href="#" id="addToCartIcon" data-product-id="<%= product._id %>" data-quantity="1"
                                    ><i class="fa fa-shopping-cart"></i
                                ></a>
                            </div>
                            
                        </div>
                    </div>
                </div></a>
            <% }); %>
        </div>
        <%-include('about')%>
        <br>
        <%-include('footer')%>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
        <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

        <script>
            $(document).ready(function () {
                $("#searchInput").keyup(function () {
                    var searchTerm = $(this).val().toLowerCase();
                    var productsFound = false;

                    $(".product-card").each(function () {
                        var productName = $(this).find(".product-details h4 a").text().toLowerCase();
                        if (productName.indexOf(searchTerm) > -1) {
                            $(this).show();
                            productsFound = true;
                        } else {
                            $(this).hide();
                        }
                    });

                    // If no products were found, show a SweetAlert message
                    if (!productsFound) {
                        swal("Oops!", "No products found for your search term.", "error");
                    }
                });
            });
        </script>

        <script>
            document.querySelectorAll('#addToCartIcon').forEach(icon => {
     icon.addEventListener('click', function(event) {
         event.preventDefault(); // Prevent default anchor tag behavior
 
         const productId = this.getAttribute('data-product-id'); // Get the product ID from data-product-id attribute
         const quantity = this.getAttribute('data-quantity'); // Get the quantity from data-quantity attribute
         const userId = '<%= userId %>'; // Get the userId from the EJS template
 
         // Find the closest product card element
         const productCard = this.closest('.product-card');
         
         // Get the stock of the product from the product card
         const stock = productCard.getAttribute('data-stock');
 
         if (parseInt(stock) <= 0) {
             // Show a SweetAlert indicating that the product is out of stock
             Swal.fire({
                 title: 'Out of Stock',
                 text: 'This product is currently out of stock.',
                 icon: 'error'
             });
         } else {
             // Construct the URL for the cart page with the product ID, quantity, and user ID
             const url = `/cart?productId=${productId}&quantity=${quantity}&userId=${userId}`;
             // Navigate to the constructed URL
             window.location.href = url;
         }
     });
 });
 
         </script>
           <script>
            document.addEventListener("DOMContentLoaded", function () {
                document.querySelectorAll(".heart-icon").forEach(function (heartIcon) {
                    const productId = heartIcon.dataset.productId;
                    const isInWishlist = localStorage.getItem(`heart-icon-${productId}`) === "true";

                    // Update the heart icon's color based on the wishlist state
                    if (isInWishlist) {
                        heartIcon.querySelector("i").classList.add("heart-icon-filled");
                    }

                    
                    heartIcon.addEventListener("click", function () {
                        const icon = this.querySelector("i");
                        const isFilled = icon.classList.contains("heart-icon-filled");

                        // Toggle the heart icon's class
                        icon.classList.toggle("heart-icon-filled");

                        // Determine the action based on the current state
                        const action = isFilled ? "remove" : "add";

                        // Update localStorage
                        localStorage.setItem(`heart-icon-${productId}`, !isFilled);

                        // Send a request to the backend
                        fetch(`/wishlistPage?action=${action}&productId=${productId}`, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                        })
                            .then((response) => response.json())
                            .then((data) => {
                                if (!data.success) {
                                    // Handle error, e.g., revert the icon's state
                                    icon.classList.toggle("heart-icon-filled");
                                    localStorage.setItem(`heart-icon-${productId}`, isFilled);
                                    showAlert("successfully added");
                                }
                            })
                            .catch((error) => {
                                console.error("Error:", error);
                                // Handle error, e.g., revert the icon's state
                                icon.classList.toggle("heart-icon-filled");
                                localStorage.setItem(`heart-icon-${productId}`, isFilled);
                                showAlert("Failed to update wishlist");
                            });

                        function showAlert(message) {
                            const alertElement = document.createElement("div");
                            alertElement.classList.add("alert-message");
                            alertElement.textContent = message;
                            document.body.appendChild(alertElement);

                            // Remove the alert after 3 seconds
                            setTimeout(() => {
                                document.body.removeChild(alertElement);
                            }, 3000);
                        }
                    });
                });
            });
        </script>

        <script>
            document.querySelectorAll(".heart-icon").forEach(function (heartIcon) {
                heartIcon.addEventListener("click", function () {
                    const productId = this.dataset.productId;

                    fetch("/wishlistPage", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ productId: productId }),
                    })
                        .then((response) => {
                            if (!response.ok) {
                                throw new Error("Failed to add product to wishlist");
                            }
                            return response.json();
                        })
                        .then((data) => {
                            // Show a success message or handle response data accordingly
                            console.log(data);
                        })
                        .catch((error) => {
                            console.error(error);
                            // Show an error message or handle the error accordingly
                        });
                });
            });
        </script>
    </body>
</html>
